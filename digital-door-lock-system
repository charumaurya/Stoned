unsigned short kp;
int i,c,l = 0;
int newpass[4];
int op[4] = {49,50,51,52};
char keypadPort at P0;                          /4x4 keypad connected at port0 of 8051
// Lcd module connections
sbit LCD_RS at P2_0_bit;
sbit LCD_EN at P2_1_bit;
sbit LCD_D4 at P2_2_bit;
sbit LCD_D5 at P2_3_bit;
sbit LCD_D6 at P2_4_bit;
sbit LCD_D7 at P2_5_bit;
// End Lcd module connections
	
int check(int a[],int b[],int size)            //checking the entered password
{
  int p;
  for(p=0;p<size;p++)
   { 
     if(b[p]!=a[p])
     return 0;
   }
  return 1;
}
void led_blink()                               //led blink on entering incorrect password more than 3 times
{
P1 = 0xff;
P3 = 0xff;
while(1)
{
  P1 = ~P1;
  P3 = ~P3;
  delay_ms(800);
}
}
void main() 
{
  int b=0;                                                 // Reset counter
  Keypad_Init();                                           // Initialize Keypad
  Lcd_Init();                                              // Initialize Lcd
  Lcd_Cmd(_LCD_CLEAR);                                     // Clear display
  Lcd_Cmd(_LCD_CURSOR_OFF);                                // Cursor off
 do
 {
  Lcd_Out(1, 1, "Enter Password");
  for(i=0;i<4;i++)
   {
     kp=0;                                                  // Reset key code variable
     do
      kp = Keypad_Key_Click();
      
    while (!kp);
  
 // Prepare value for output, transform key to it's ASCII value 
 switch (kp) {
      case  1: kp = 49; break; // 1        // Uncomment this block for keypad4x4
      case  2: kp = 50; break; // 2
      case  3: kp = 51; break; // 3
      case  4: kp = 65; break; // A
      case  5: kp = 52; break; // 4
      case  6: kp = 53; break; // 5
      case  7: kp = 54; break; // 6
      case  8: kp = 66; break; // B
      case  9: kp = 55; break; // 7
      case 10: kp = 56; break; // 8
      case 11: kp = 57; break; // 9
      case 12: kp = 67; break; // C
      case 13: kp = 42; break; // *
      case 14: kp = 48; break; // 0
      case 15: kp = 35; break; // #
      case 16: kp = 68; break; // D
    }
    Lcd_Chr(2,i+1,kp);
    newpass[i] = kp;
  }
  delay_ms(1000);
  
Lcd_Cmd(_LCD_CLEAR);

c = check(newpass,op,4);

if(c==1)
{
  Lcd_Out(1,1,"ACCESS GRANTED");
  break;
}
else
{
 Lcd_Out(1,1,"ACCESS DENIED");
 delay_ms(1000);
 Lcd_Cmd(_LCD_CLEAR);
 b++;
}

delay_ms(1000);
}

while(b<3);

if(b==3)
{
 Lcd_Out(2,1,"DOOR LOCKED");
 led_blink();
}
}
